@model notesplace.Models.register
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>

    <!-- Important Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Title -->
    <title>Notes-MarketPlace</title>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="~/Content/Front/css/font-awesome/css/font-awesome.min.css">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/Content/Front/css/bootstrap/bootstrap.min.css">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/Content/Front/css/signup.css">

</head>

<body>

    <div class="bg-image-main" id="signup-page">
        <div class="inner-box">

            <div id="logo" class="col-12" align="center">

                <img src="~/Content/Front/images/logo/top-logo.png" class="img-responsive">

            </div>

            <div class="child-container">

                <div class="main-header">

                    <h3>Create an Account</h3>

                </div>

                <div class="main-description">

                    <p>Enter email address and password to login</p>
                    @if(TempData["Success"]!=null)
                    {
                        <p style="color:#33cc33";><i class="fa fa-check-circle"></i> @TempData["Success"]</p>
                    }

                </div>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-box">

                        <div class="form-group">
                            <label for="firstName" class="form-label re">First Name</label>
                            
                            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control form-box-content non-pass", @placeholder = "Enter First Name", @id = "firstName" } })
                            @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <label for="lastName" class="form-label re">Last Name</label>

                            @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control form-box-content non-pass", @placeholder = "Enter Last Name", @id = "lastName" } })
                            @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <label for="inputEmail" class="form-label re">Email</label>

                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-box-content non-pass", @placeholder = "Enter Email", @id = "inputEmail" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">

                            <label for="inputPassword" class="form-label">Password</label>

                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control form-box-content pass", @placeholder = "Password", @id = "inputPassword" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            <span class="show-hide-eye fa fa-fw fa-eye field-icon toggle-password" toggle="#inputPassword"></span>

                        </div>


                        <div class="form-group">

                            <label for="confirmPassword" class="form-label">Confirm Password</label>

                            @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "form-control form-box-content pass", @placeholder = "Re-enter your Password", @id = "confirmpassword" } })
                            @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
                            <span class="show-hide-eye fa fa-fw fa-eye field-icon toggle-password" toggle="#confirmpassword"></span>

                        </div>



                        <div class="credential-btn-padding">

                            <button type="submit" class="btn credential-btn-style">Sign Up</button>

                        </div>

                        <div class="end-description-outer">

                            <p class="end-description-content">Already have an account?<a href="@Url.Action("login","Account")"> Login</a></p>

                        </div>

                    </div>
                }

            </div>

        </div>
    </div>



    <!-- JQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="~/Scripts/Front/js/bootstrap/bootstrap.min.js"></script>

    <!-- Custom JS -->
    <script src="~/Scripts/Front/js/script.js"></script>
</body>

</html>
